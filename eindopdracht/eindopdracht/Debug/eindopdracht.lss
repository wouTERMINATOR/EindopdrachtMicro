
eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000622  000006b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000622  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800102  00800102  000006b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000728  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b39  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ec  00000000  00000000  000012a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003d4  00000000  00000000  00001b95  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000150  00000000  00000000  00001f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000499  00000000  00000000  000020bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000041f  00000000  00000000  00002555  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002974  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	2b c1       	rjmp	.+598    	; 0x25c <__vector_1>
   6:	00 00       	nop
   8:	f8 c0       	rjmp	.+496    	; 0x1fa <__vector_2>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e2       	ldi	r30, 0x22	; 34
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 30       	cpi	r26, 0x04	; 4
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	fd d0       	rcall	.+506    	; 0x2be <main>
  c4:	ac c2       	rjmp	.+1368   	; 0x61e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <wait>:
	
void PLAYNOTE(float duration, float frequency);

void wait( int ms )
{
	for (int i=0; i<ms; i++) {
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	08 c0       	rjmp	.+16     	; 0xde <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ce:	ef ec       	ldi	r30, 0xCF	; 207
  d0:	f7 e0       	ldi	r31, 0x07	; 7
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <wait+0xa>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <wait+0x10>
  d8:	00 00       	nop
  da:	2f 5f       	subi	r18, 0xFF	; 255
  dc:	3f 4f       	sbci	r19, 0xFF	; 255
  de:	28 17       	cp	r18, r24
  e0:	39 07       	cpc	r19, r25
  e2:	ac f3       	brlt	.-22     	; 0xce <wait+0x6>
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
  e4:	08 95       	ret

000000e6 <check_ultrasonic>:
    }
	return 1;
}

void check_ultrasonic(){
	temp = 1;
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  ee:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	counter_in_ms = 0;
  f2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
  f6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
	PORTD = 0b00000100;
  fa:	84 e0       	ldi	r24, 0x04	; 4
  fc:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fe:	9a e1       	ldi	r25, 0x1A	; 26
 100:	9a 95       	dec	r25
 102:	f1 f7       	brne	.-4      	; 0x100 <check_ultrasonic+0x1a>
 104:	00 c0       	rjmp	.+0      	; 0x106 <check_ultrasonic+0x20>
	_delay_us(10);
	PORTD = 0b00000100;
 106:	82 bb       	out	0x12, r24	; 18
	while(1){
		counter_in_ms = counter_in_ms + 100;
 108:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 10c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 110:	8c 59       	subi	r24, 0x9C	; 156
 112:	9f 4f       	sbci	r25, 0xFF	; 255
 114:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 118:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
		if(temp == 0){
 11c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 120:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 124:	89 2b       	or	r24, r25
 126:	81 f7       	brne	.-32     	; 0x108 <check_ultrasonic+0x22>
			break;
		}
	}
}
 128:	08 95       	ret

0000012a <PLAYNOTE>:

void PLAYNOTE(float duration, float frequency){
 12a:	4f 92       	push	r4
 12c:	5f 92       	push	r5
 12e:	6f 92       	push	r6
 130:	7f 92       	push	r7
 132:	8f 92       	push	r8
 134:	9f 92       	push	r9
 136:	af 92       	push	r10
 138:	bf 92       	push	r11
 13a:	cf 92       	push	r12
 13c:	df 92       	push	r13
 13e:	ef 92       	push	r14
 140:	ff 92       	push	r15
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	00 d0       	rcall	.+0      	; 0x148 <PLAYNOTE+0x1e>
 148:	00 d0       	rcall	.+0      	; 0x14a <PLAYNOTE+0x20>
 14a:	cd b7       	in	r28, 0x3d	; 61
 14c:	de b7       	in	r29, 0x3e	; 62
 14e:	4b 01       	movw	r8, r22
 150:	5c 01       	movw	r10, r24
	long int i, cycles;
	float half_period;
	float wavelength;
	
	wavelength=(1/frequency)*1000;
 152:	60 e0       	ldi	r22, 0x00	; 0
 154:	70 e0       	ldi	r23, 0x00	; 0
 156:	80 e8       	ldi	r24, 0x80	; 128
 158:	9f e3       	ldi	r25, 0x3F	; 63
 15a:	d7 d0       	rcall	.+430    	; 0x30a <__divsf3>
 15c:	20 e0       	ldi	r18, 0x00	; 0
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	4a e7       	ldi	r20, 0x7A	; 122
 162:	54 e4       	ldi	r21, 0x44	; 68
 164:	f9 d1       	rcall	.+1010   	; 0x558 <__mulsf3>
 166:	6b 01       	movw	r12, r22
 168:	7c 01       	movw	r14, r24
	
	cycles = duration/wavelength;
 16a:	9b 01       	movw	r18, r22
 16c:	ac 01       	movw	r20, r24
 16e:	c5 01       	movw	r24, r10
 170:	b4 01       	movw	r22, r8
 172:	cb d0       	rcall	.+406    	; 0x30a <__divsf3>
 174:	32 d1       	rcall	.+612    	; 0x3da <__fixsfsi>
 176:	2b 01       	movw	r4, r22
 178:	3c 01       	movw	r6, r24
	
	half_period = wavelength/2;
 17a:	20 e0       	ldi	r18, 0x00	; 0
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	40 e0       	ldi	r20, 0x00	; 0
 180:	5f e3       	ldi	r21, 0x3F	; 63
 182:	c7 01       	movw	r24, r14
 184:	b6 01       	movw	r22, r12
 186:	e8 d1       	rcall	.+976    	; 0x558 <__mulsf3>
 188:	69 83       	std	Y+1, r22	; 0x01
 18a:	7a 83       	std	Y+2, r23	; 0x02
 18c:	8b 83       	std	Y+3, r24	; 0x03
 18e:	9c 83       	std	Y+4, r25	; 0x04
	
	SPEAKER_DDR |= (1 << SPEAKER_PIN);
 190:	84 b3       	in	r24, 0x14	; 20
 192:	80 68       	ori	r24, 0x80	; 128
 194:	84 bb       	out	0x14, r24	; 20
	
	for(i=0;i<cycles;i++){
 196:	c1 2c       	mov	r12, r1
 198:	d1 2c       	mov	r13, r1
 19a:	76 01       	movw	r14, r12
		wait(half_period);
 19c:	16 c0       	rjmp	.+44     	; 0x1ca <PLAYNOTE+0xa0>
 19e:	69 81       	ldd	r22, Y+1	; 0x01
 1a0:	7a 81       	ldd	r23, Y+2	; 0x02
 1a2:	8b 81       	ldd	r24, Y+3	; 0x03
 1a4:	9c 81       	ldd	r25, Y+4	; 0x04
 1a6:	19 d1       	rcall	.+562    	; 0x3da <__fixsfsi>
 1a8:	4b 01       	movw	r8, r22
 1aa:	5c 01       	movw	r10, r24
 1ac:	cb 01       	movw	r24, r22
		
		SPEAKER_PORT |= (1<<SPEAKER_PIN);
 1ae:	8c df       	rcall	.-232    	; 0xc8 <wait>
 1b0:	85 b3       	in	r24, 0x15	; 21
 1b2:	80 68       	ori	r24, 0x80	; 128
		
		wait(half_period);
 1b4:	85 bb       	out	0x15, r24	; 21
 1b6:	c4 01       	movw	r24, r8
 1b8:	87 df       	rcall	.-242    	; 0xc8 <wait>
		
		SPEAKER_PORT &= ~(1<<SPEAKER_PIN);
 1ba:	85 b3       	in	r24, 0x15	; 21
 1bc:	8f 77       	andi	r24, 0x7F	; 127
 1be:	85 bb       	out	0x15, r24	; 21
	
	half_period = wavelength/2;
	
	SPEAKER_DDR |= (1 << SPEAKER_PIN);
	
	for(i=0;i<cycles;i++){
 1c0:	8f ef       	ldi	r24, 0xFF	; 255
 1c2:	c8 1a       	sub	r12, r24
 1c4:	d8 0a       	sbc	r13, r24
 1c6:	e8 0a       	sbc	r14, r24
 1c8:	f8 0a       	sbc	r15, r24
 1ca:	c4 14       	cp	r12, r4
 1cc:	d5 04       	cpc	r13, r5
 1ce:	e6 04       	cpc	r14, r6
 1d0:	f7 04       	cpc	r15, r7
 1d2:	2c f3       	brlt	.-54     	; 0x19e <PLAYNOTE+0x74>
		wait(half_period);
		
		SPEAKER_PORT &= ~(1<<SPEAKER_PIN);
	}
	return;
}
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	ff 90       	pop	r15
 1e2:	ef 90       	pop	r14
 1e4:	df 90       	pop	r13
 1e6:	cf 90       	pop	r12
 1e8:	bf 90       	pop	r11
 1ea:	af 90       	pop	r10
 1ec:	9f 90       	pop	r9
 1ee:	8f 90       	pop	r8
 1f0:	7f 90       	pop	r7
 1f2:	6f 90       	pop	r6
 1f4:	5f 90       	pop	r5
 1f6:	4f 90       	pop	r4
 1f8:	08 95       	ret

000001fa <__vector_2>:
	for (int i=0; i<ms; i++) {
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}

ISR( INT1_vect ) {
 1fa:	1f 92       	push	r1
 1fc:	0f 92       	push	r0
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	0f 92       	push	r0
 202:	11 24       	eor	r1, r1
 204:	0b b6       	in	r0, 0x3b	; 59
 206:	0f 92       	push	r0
 208:	2f 93       	push	r18
 20a:	3f 93       	push	r19
 20c:	4f 93       	push	r20
 20e:	5f 93       	push	r21
 210:	6f 93       	push	r22
 212:	7f 93       	push	r23
 214:	8f 93       	push	r24
 216:	9f 93       	push	r25
 218:	af 93       	push	r26
 21a:	bf 93       	push	r27
 21c:	ef 93       	push	r30
 21e:	ff 93       	push	r31
	PLAYNOTE(100, 100);
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	48 ec       	ldi	r20, 0xC8	; 200
 226:	52 e4       	ldi	r21, 0x42	; 66
 228:	ca 01       	movw	r24, r20
 22a:	b9 01       	movw	r22, r18
 22c:	7e df       	rcall	.-260    	; 0x12a <PLAYNOTE>
	temp = 0;
 22e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 232:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
}
 236:	ff 91       	pop	r31
 238:	ef 91       	pop	r30
 23a:	bf 91       	pop	r27
 23c:	af 91       	pop	r26
 23e:	9f 91       	pop	r25
 240:	8f 91       	pop	r24
 242:	7f 91       	pop	r23
 244:	6f 91       	pop	r22
 246:	5f 91       	pop	r21
 248:	4f 91       	pop	r20
 24a:	3f 91       	pop	r19
 24c:	2f 91       	pop	r18
 24e:	0f 90       	pop	r0
 250:	0b be       	out	0x3b, r0	; 59
 252:	0f 90       	pop	r0
 254:	0f be       	out	0x3f, r0	; 63
 256:	0f 90       	pop	r0
 258:	1f 90       	pop	r1
 25a:	18 95       	reti

0000025c <__vector_1>:
ISR( INT0_vect ) {
 25c:	1f 92       	push	r1
 25e:	0f 92       	push	r0
 260:	0f b6       	in	r0, 0x3f	; 63
 262:	0f 92       	push	r0
 264:	11 24       	eor	r1, r1
 266:	0b b6       	in	r0, 0x3b	; 59
 268:	0f 92       	push	r0
 26a:	2f 93       	push	r18
 26c:	3f 93       	push	r19
 26e:	4f 93       	push	r20
 270:	5f 93       	push	r21
 272:	6f 93       	push	r22
 274:	7f 93       	push	r23
 276:	8f 93       	push	r24
 278:	9f 93       	push	r25
 27a:	af 93       	push	r26
 27c:	bf 93       	push	r27
 27e:	ef 93       	push	r30
 280:	ff 93       	push	r31
	PLAYNOTE(100, 100);
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	48 ec       	ldi	r20, 0xC8	; 200
 288:	52 e4       	ldi	r21, 0x42	; 66
 28a:	ca 01       	movw	r24, r20
 28c:	b9 01       	movw	r22, r18
 28e:	4d df       	rcall	.-358    	; 0x12a <PLAYNOTE>
	temp = 0;
 290:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 294:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
}
 298:	ff 91       	pop	r31
 29a:	ef 91       	pop	r30
 29c:	bf 91       	pop	r27
 29e:	af 91       	pop	r26
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	7f 91       	pop	r23
 2a6:	6f 91       	pop	r22
 2a8:	5f 91       	pop	r21
 2aa:	4f 91       	pop	r20
 2ac:	3f 91       	pop	r19
 2ae:	2f 91       	pop	r18
 2b0:	0f 90       	pop	r0
 2b2:	0b be       	out	0x3b, r0	; 59
 2b4:	0f 90       	pop	r0
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	0f 90       	pop	r0
 2ba:	1f 90       	pop	r1
 2bc:	18 95       	reti

000002be <main>:


int main(void)
{
	DDRD = 0b01100100; // used for sensor pin 0 is for trigger pin 1 is for echo
 2be:	84 e6       	ldi	r24, 0x64	; 100
 2c0:	81 bb       	out	0x11, r24	; 17

	// Init Interrupt hardware
	EICRA |= 0x0B;			// INT1 falling edge, INT0 rising edge
 2c2:	ea e6       	ldi	r30, 0x6A	; 106
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	8b 60       	ori	r24, 0x0B	; 11
 2ca:	80 83       	st	Z, r24
	EIMSK |= 0x02;			// Enable INT1 & INT0
 2cc:	89 b7       	in	r24, 0x39	; 57
 2ce:	82 60       	ori	r24, 0x02	; 2
 2d0:	89 bf       	out	0x39, r24	; 57
	
	sei();
 2d2:	78 94       	sei
	
	PLAYNOTE(200, 250);
 2d4:	20 e0       	ldi	r18, 0x00	; 0
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	4a e7       	ldi	r20, 0x7A	; 122
 2da:	53 e4       	ldi	r21, 0x43	; 67
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	70 e0       	ldi	r23, 0x00	; 0
 2e0:	88 e4       	ldi	r24, 0x48	; 72
 2e2:	93 e4       	ldi	r25, 0x43	; 67
 2e4:	22 df       	rcall	.-444    	; 0x12a <PLAYNOTE>
	while(1){
		check_ultrasonic();
 2e6:	ff de       	rcall	.-514    	; 0xe6 <check_ultrasonic>
 2e8:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_end>
	    PLAYNOTE(500,counter_in_ms);
 2ec:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_end+0x1>
 2f0:	07 2e       	mov	r0, r23
 2f2:	00 0c       	add	r0, r0
 2f4:	88 0b       	sbc	r24, r24
 2f6:	99 0b       	sbc	r25, r25
 2f8:	a3 d0       	rcall	.+326    	; 0x440 <__floatsisf>
 2fa:	9b 01       	movw	r18, r22
 2fc:	ac 01       	movw	r20, r24
 2fe:	60 e0       	ldi	r22, 0x00	; 0
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	8a ef       	ldi	r24, 0xFA	; 250
 304:	93 e4       	ldi	r25, 0x43	; 67
 306:	11 df       	rcall	.-478    	; 0x12a <PLAYNOTE>
 308:	ee cf       	rjmp	.-36     	; 0x2e6 <main+0x28>

0000030a <__divsf3>:
 30a:	0c d0       	rcall	.+24     	; 0x324 <__divsf3x>
 30c:	eb c0       	rjmp	.+470    	; 0x4e4 <__fp_round>
 30e:	e3 d0       	rcall	.+454    	; 0x4d6 <__fp_pscB>
 310:	40 f0       	brcs	.+16     	; 0x322 <__divsf3+0x18>
 312:	da d0       	rcall	.+436    	; 0x4c8 <__fp_pscA>
 314:	30 f0       	brcs	.+12     	; 0x322 <__divsf3+0x18>
 316:	21 f4       	brne	.+8      	; 0x320 <__divsf3+0x16>
 318:	5f 3f       	cpi	r21, 0xFF	; 255
 31a:	19 f0       	breq	.+6      	; 0x322 <__divsf3+0x18>
 31c:	cc c0       	rjmp	.+408    	; 0x4b6 <__fp_inf>
 31e:	51 11       	cpse	r21, r1
 320:	15 c1       	rjmp	.+554    	; 0x54c <__fp_szero>
 322:	cf c0       	rjmp	.+414    	; 0x4c2 <__fp_nan>

00000324 <__divsf3x>:
 324:	f0 d0       	rcall	.+480    	; 0x506 <__fp_split3>
 326:	98 f3       	brcs	.-26     	; 0x30e <__divsf3+0x4>

00000328 <__divsf3_pse>:
 328:	99 23       	and	r25, r25
 32a:	c9 f3       	breq	.-14     	; 0x31e <__divsf3+0x14>
 32c:	55 23       	and	r21, r21
 32e:	b1 f3       	breq	.-20     	; 0x31c <__divsf3+0x12>
 330:	95 1b       	sub	r25, r21
 332:	55 0b       	sbc	r21, r21
 334:	bb 27       	eor	r27, r27
 336:	aa 27       	eor	r26, r26
 338:	62 17       	cp	r22, r18
 33a:	73 07       	cpc	r23, r19
 33c:	84 07       	cpc	r24, r20
 33e:	38 f0       	brcs	.+14     	; 0x34e <__divsf3_pse+0x26>
 340:	9f 5f       	subi	r25, 0xFF	; 255
 342:	5f 4f       	sbci	r21, 0xFF	; 255
 344:	22 0f       	add	r18, r18
 346:	33 1f       	adc	r19, r19
 348:	44 1f       	adc	r20, r20
 34a:	aa 1f       	adc	r26, r26
 34c:	a9 f3       	breq	.-22     	; 0x338 <__divsf3_pse+0x10>
 34e:	33 d0       	rcall	.+102    	; 0x3b6 <__divsf3_pse+0x8e>
 350:	0e 2e       	mov	r0, r30
 352:	3a f0       	brmi	.+14     	; 0x362 <__divsf3_pse+0x3a>
 354:	e0 e8       	ldi	r30, 0x80	; 128
 356:	30 d0       	rcall	.+96     	; 0x3b8 <__divsf3_pse+0x90>
 358:	91 50       	subi	r25, 0x01	; 1
 35a:	50 40       	sbci	r21, 0x00	; 0
 35c:	e6 95       	lsr	r30
 35e:	00 1c       	adc	r0, r0
 360:	ca f7       	brpl	.-14     	; 0x354 <__divsf3_pse+0x2c>
 362:	29 d0       	rcall	.+82     	; 0x3b6 <__divsf3_pse+0x8e>
 364:	fe 2f       	mov	r31, r30
 366:	27 d0       	rcall	.+78     	; 0x3b6 <__divsf3_pse+0x8e>
 368:	66 0f       	add	r22, r22
 36a:	77 1f       	adc	r23, r23
 36c:	88 1f       	adc	r24, r24
 36e:	bb 1f       	adc	r27, r27
 370:	26 17       	cp	r18, r22
 372:	37 07       	cpc	r19, r23
 374:	48 07       	cpc	r20, r24
 376:	ab 07       	cpc	r26, r27
 378:	b0 e8       	ldi	r27, 0x80	; 128
 37a:	09 f0       	breq	.+2      	; 0x37e <__divsf3_pse+0x56>
 37c:	bb 0b       	sbc	r27, r27
 37e:	80 2d       	mov	r24, r0
 380:	bf 01       	movw	r22, r30
 382:	ff 27       	eor	r31, r31
 384:	93 58       	subi	r25, 0x83	; 131
 386:	5f 4f       	sbci	r21, 0xFF	; 255
 388:	2a f0       	brmi	.+10     	; 0x394 <__divsf3_pse+0x6c>
 38a:	9e 3f       	cpi	r25, 0xFE	; 254
 38c:	51 05       	cpc	r21, r1
 38e:	68 f0       	brcs	.+26     	; 0x3aa <__divsf3_pse+0x82>
 390:	92 c0       	rjmp	.+292    	; 0x4b6 <__fp_inf>
 392:	dc c0       	rjmp	.+440    	; 0x54c <__fp_szero>
 394:	5f 3f       	cpi	r21, 0xFF	; 255
 396:	ec f3       	brlt	.-6      	; 0x392 <__divsf3_pse+0x6a>
 398:	98 3e       	cpi	r25, 0xE8	; 232
 39a:	dc f3       	brlt	.-10     	; 0x392 <__divsf3_pse+0x6a>
 39c:	86 95       	lsr	r24
 39e:	77 95       	ror	r23
 3a0:	67 95       	ror	r22
 3a2:	b7 95       	ror	r27
 3a4:	f7 95       	ror	r31
 3a6:	9f 5f       	subi	r25, 0xFF	; 255
 3a8:	c9 f7       	brne	.-14     	; 0x39c <__divsf3_pse+0x74>
 3aa:	88 0f       	add	r24, r24
 3ac:	91 1d       	adc	r25, r1
 3ae:	96 95       	lsr	r25
 3b0:	87 95       	ror	r24
 3b2:	97 f9       	bld	r25, 7
 3b4:	08 95       	ret
 3b6:	e1 e0       	ldi	r30, 0x01	; 1
 3b8:	66 0f       	add	r22, r22
 3ba:	77 1f       	adc	r23, r23
 3bc:	88 1f       	adc	r24, r24
 3be:	bb 1f       	adc	r27, r27
 3c0:	62 17       	cp	r22, r18
 3c2:	73 07       	cpc	r23, r19
 3c4:	84 07       	cpc	r24, r20
 3c6:	ba 07       	cpc	r27, r26
 3c8:	20 f0       	brcs	.+8      	; 0x3d2 <__divsf3_pse+0xaa>
 3ca:	62 1b       	sub	r22, r18
 3cc:	73 0b       	sbc	r23, r19
 3ce:	84 0b       	sbc	r24, r20
 3d0:	ba 0b       	sbc	r27, r26
 3d2:	ee 1f       	adc	r30, r30
 3d4:	88 f7       	brcc	.-30     	; 0x3b8 <__divsf3_pse+0x90>
 3d6:	e0 95       	com	r30
 3d8:	08 95       	ret

000003da <__fixsfsi>:
 3da:	04 d0       	rcall	.+8      	; 0x3e4 <__fixunssfsi>
 3dc:	68 94       	set
 3de:	b1 11       	cpse	r27, r1
 3e0:	b5 c0       	rjmp	.+362    	; 0x54c <__fp_szero>
 3e2:	08 95       	ret

000003e4 <__fixunssfsi>:
 3e4:	98 d0       	rcall	.+304    	; 0x516 <__fp_splitA>
 3e6:	88 f0       	brcs	.+34     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e8:	9f 57       	subi	r25, 0x7F	; 127
 3ea:	90 f0       	brcs	.+36     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3ec:	b9 2f       	mov	r27, r25
 3ee:	99 27       	eor	r25, r25
 3f0:	b7 51       	subi	r27, 0x17	; 23
 3f2:	a0 f0       	brcs	.+40     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f4:	d1 f0       	breq	.+52     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f6:	66 0f       	add	r22, r22
 3f8:	77 1f       	adc	r23, r23
 3fa:	88 1f       	adc	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	1a f0       	brmi	.+6      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 400:	ba 95       	dec	r27
 402:	c9 f7       	brne	.-14     	; 0x3f6 <__fixunssfsi+0x12>
 404:	12 c0       	rjmp	.+36     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 406:	b1 30       	cpi	r27, 0x01	; 1
 408:	81 f0       	breq	.+32     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 40a:	9f d0       	rcall	.+318    	; 0x54a <__fp_zero>
 40c:	b1 e0       	ldi	r27, 0x01	; 1
 40e:	08 95       	ret
 410:	9c c0       	rjmp	.+312    	; 0x54a <__fp_zero>
 412:	67 2f       	mov	r22, r23
 414:	78 2f       	mov	r23, r24
 416:	88 27       	eor	r24, r24
 418:	b8 5f       	subi	r27, 0xF8	; 248
 41a:	39 f0       	breq	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41c:	b9 3f       	cpi	r27, 0xF9	; 249
 41e:	cc f3       	brlt	.-14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 420:	86 95       	lsr	r24
 422:	77 95       	ror	r23
 424:	67 95       	ror	r22
 426:	b3 95       	inc	r27
 428:	d9 f7       	brne	.-10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 42a:	3e f4       	brtc	.+14     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42c:	90 95       	com	r25
 42e:	80 95       	com	r24
 430:	70 95       	com	r23
 432:	61 95       	neg	r22
 434:	7f 4f       	sbci	r23, 0xFF	; 255
 436:	8f 4f       	sbci	r24, 0xFF	; 255
 438:	9f 4f       	sbci	r25, 0xFF	; 255
 43a:	08 95       	ret

0000043c <__floatunsisf>:
 43c:	e8 94       	clt
 43e:	09 c0       	rjmp	.+18     	; 0x452 <__floatsisf+0x12>

00000440 <__floatsisf>:
 440:	97 fb       	bst	r25, 7
 442:	3e f4       	brtc	.+14     	; 0x452 <__floatsisf+0x12>
 444:	90 95       	com	r25
 446:	80 95       	com	r24
 448:	70 95       	com	r23
 44a:	61 95       	neg	r22
 44c:	7f 4f       	sbci	r23, 0xFF	; 255
 44e:	8f 4f       	sbci	r24, 0xFF	; 255
 450:	9f 4f       	sbci	r25, 0xFF	; 255
 452:	99 23       	and	r25, r25
 454:	a9 f0       	breq	.+42     	; 0x480 <__floatsisf+0x40>
 456:	f9 2f       	mov	r31, r25
 458:	96 e9       	ldi	r25, 0x96	; 150
 45a:	bb 27       	eor	r27, r27
 45c:	93 95       	inc	r25
 45e:	f6 95       	lsr	r31
 460:	87 95       	ror	r24
 462:	77 95       	ror	r23
 464:	67 95       	ror	r22
 466:	b7 95       	ror	r27
 468:	f1 11       	cpse	r31, r1
 46a:	f8 cf       	rjmp	.-16     	; 0x45c <__floatsisf+0x1c>
 46c:	fa f4       	brpl	.+62     	; 0x4ac <__floatsisf+0x6c>
 46e:	bb 0f       	add	r27, r27
 470:	11 f4       	brne	.+4      	; 0x476 <__floatsisf+0x36>
 472:	60 ff       	sbrs	r22, 0
 474:	1b c0       	rjmp	.+54     	; 0x4ac <__floatsisf+0x6c>
 476:	6f 5f       	subi	r22, 0xFF	; 255
 478:	7f 4f       	sbci	r23, 0xFF	; 255
 47a:	8f 4f       	sbci	r24, 0xFF	; 255
 47c:	9f 4f       	sbci	r25, 0xFF	; 255
 47e:	16 c0       	rjmp	.+44     	; 0x4ac <__floatsisf+0x6c>
 480:	88 23       	and	r24, r24
 482:	11 f0       	breq	.+4      	; 0x488 <__floatsisf+0x48>
 484:	96 e9       	ldi	r25, 0x96	; 150
 486:	11 c0       	rjmp	.+34     	; 0x4aa <__floatsisf+0x6a>
 488:	77 23       	and	r23, r23
 48a:	21 f0       	breq	.+8      	; 0x494 <__floatsisf+0x54>
 48c:	9e e8       	ldi	r25, 0x8E	; 142
 48e:	87 2f       	mov	r24, r23
 490:	76 2f       	mov	r23, r22
 492:	05 c0       	rjmp	.+10     	; 0x49e <__floatsisf+0x5e>
 494:	66 23       	and	r22, r22
 496:	71 f0       	breq	.+28     	; 0x4b4 <__floatsisf+0x74>
 498:	96 e8       	ldi	r25, 0x86	; 134
 49a:	86 2f       	mov	r24, r22
 49c:	70 e0       	ldi	r23, 0x00	; 0
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	2a f0       	brmi	.+10     	; 0x4ac <__floatsisf+0x6c>
 4a2:	9a 95       	dec	r25
 4a4:	66 0f       	add	r22, r22
 4a6:	77 1f       	adc	r23, r23
 4a8:	88 1f       	adc	r24, r24
 4aa:	da f7       	brpl	.-10     	; 0x4a2 <__floatsisf+0x62>
 4ac:	88 0f       	add	r24, r24
 4ae:	96 95       	lsr	r25
 4b0:	87 95       	ror	r24
 4b2:	97 f9       	bld	r25, 7
 4b4:	08 95       	ret

000004b6 <__fp_inf>:
 4b6:	97 f9       	bld	r25, 7
 4b8:	9f 67       	ori	r25, 0x7F	; 127
 4ba:	80 e8       	ldi	r24, 0x80	; 128
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	08 95       	ret

000004c2 <__fp_nan>:
 4c2:	9f ef       	ldi	r25, 0xFF	; 255
 4c4:	80 ec       	ldi	r24, 0xC0	; 192
 4c6:	08 95       	ret

000004c8 <__fp_pscA>:
 4c8:	00 24       	eor	r0, r0
 4ca:	0a 94       	dec	r0
 4cc:	16 16       	cp	r1, r22
 4ce:	17 06       	cpc	r1, r23
 4d0:	18 06       	cpc	r1, r24
 4d2:	09 06       	cpc	r0, r25
 4d4:	08 95       	ret

000004d6 <__fp_pscB>:
 4d6:	00 24       	eor	r0, r0
 4d8:	0a 94       	dec	r0
 4da:	12 16       	cp	r1, r18
 4dc:	13 06       	cpc	r1, r19
 4de:	14 06       	cpc	r1, r20
 4e0:	05 06       	cpc	r0, r21
 4e2:	08 95       	ret

000004e4 <__fp_round>:
 4e4:	09 2e       	mov	r0, r25
 4e6:	03 94       	inc	r0
 4e8:	00 0c       	add	r0, r0
 4ea:	11 f4       	brne	.+4      	; 0x4f0 <__fp_round+0xc>
 4ec:	88 23       	and	r24, r24
 4ee:	52 f0       	brmi	.+20     	; 0x504 <__fp_round+0x20>
 4f0:	bb 0f       	add	r27, r27
 4f2:	40 f4       	brcc	.+16     	; 0x504 <__fp_round+0x20>
 4f4:	bf 2b       	or	r27, r31
 4f6:	11 f4       	brne	.+4      	; 0x4fc <__fp_round+0x18>
 4f8:	60 ff       	sbrs	r22, 0
 4fa:	04 c0       	rjmp	.+8      	; 0x504 <__fp_round+0x20>
 4fc:	6f 5f       	subi	r22, 0xFF	; 255
 4fe:	7f 4f       	sbci	r23, 0xFF	; 255
 500:	8f 4f       	sbci	r24, 0xFF	; 255
 502:	9f 4f       	sbci	r25, 0xFF	; 255
 504:	08 95       	ret

00000506 <__fp_split3>:
 506:	57 fd       	sbrc	r21, 7
 508:	90 58       	subi	r25, 0x80	; 128
 50a:	44 0f       	add	r20, r20
 50c:	55 1f       	adc	r21, r21
 50e:	59 f0       	breq	.+22     	; 0x526 <__fp_splitA+0x10>
 510:	5f 3f       	cpi	r21, 0xFF	; 255
 512:	71 f0       	breq	.+28     	; 0x530 <__fp_splitA+0x1a>
 514:	47 95       	ror	r20

00000516 <__fp_splitA>:
 516:	88 0f       	add	r24, r24
 518:	97 fb       	bst	r25, 7
 51a:	99 1f       	adc	r25, r25
 51c:	61 f0       	breq	.+24     	; 0x536 <__fp_splitA+0x20>
 51e:	9f 3f       	cpi	r25, 0xFF	; 255
 520:	79 f0       	breq	.+30     	; 0x540 <__fp_splitA+0x2a>
 522:	87 95       	ror	r24
 524:	08 95       	ret
 526:	12 16       	cp	r1, r18
 528:	13 06       	cpc	r1, r19
 52a:	14 06       	cpc	r1, r20
 52c:	55 1f       	adc	r21, r21
 52e:	f2 cf       	rjmp	.-28     	; 0x514 <__fp_split3+0xe>
 530:	46 95       	lsr	r20
 532:	f1 df       	rcall	.-30     	; 0x516 <__fp_splitA>
 534:	08 c0       	rjmp	.+16     	; 0x546 <__fp_splitA+0x30>
 536:	16 16       	cp	r1, r22
 538:	17 06       	cpc	r1, r23
 53a:	18 06       	cpc	r1, r24
 53c:	99 1f       	adc	r25, r25
 53e:	f1 cf       	rjmp	.-30     	; 0x522 <__fp_splitA+0xc>
 540:	86 95       	lsr	r24
 542:	71 05       	cpc	r23, r1
 544:	61 05       	cpc	r22, r1
 546:	08 94       	sec
 548:	08 95       	ret

0000054a <__fp_zero>:
 54a:	e8 94       	clt

0000054c <__fp_szero>:
 54c:	bb 27       	eor	r27, r27
 54e:	66 27       	eor	r22, r22
 550:	77 27       	eor	r23, r23
 552:	cb 01       	movw	r24, r22
 554:	97 f9       	bld	r25, 7
 556:	08 95       	ret

00000558 <__mulsf3>:
 558:	0b d0       	rcall	.+22     	; 0x570 <__mulsf3x>
 55a:	c4 cf       	rjmp	.-120    	; 0x4e4 <__fp_round>
 55c:	b5 df       	rcall	.-150    	; 0x4c8 <__fp_pscA>
 55e:	28 f0       	brcs	.+10     	; 0x56a <__mulsf3+0x12>
 560:	ba df       	rcall	.-140    	; 0x4d6 <__fp_pscB>
 562:	18 f0       	brcs	.+6      	; 0x56a <__mulsf3+0x12>
 564:	95 23       	and	r25, r21
 566:	09 f0       	breq	.+2      	; 0x56a <__mulsf3+0x12>
 568:	a6 cf       	rjmp	.-180    	; 0x4b6 <__fp_inf>
 56a:	ab cf       	rjmp	.-170    	; 0x4c2 <__fp_nan>
 56c:	11 24       	eor	r1, r1
 56e:	ee cf       	rjmp	.-36     	; 0x54c <__fp_szero>

00000570 <__mulsf3x>:
 570:	ca df       	rcall	.-108    	; 0x506 <__fp_split3>
 572:	a0 f3       	brcs	.-24     	; 0x55c <__mulsf3+0x4>

00000574 <__mulsf3_pse>:
 574:	95 9f       	mul	r25, r21
 576:	d1 f3       	breq	.-12     	; 0x56c <__mulsf3+0x14>
 578:	95 0f       	add	r25, r21
 57a:	50 e0       	ldi	r21, 0x00	; 0
 57c:	55 1f       	adc	r21, r21
 57e:	62 9f       	mul	r22, r18
 580:	f0 01       	movw	r30, r0
 582:	72 9f       	mul	r23, r18
 584:	bb 27       	eor	r27, r27
 586:	f0 0d       	add	r31, r0
 588:	b1 1d       	adc	r27, r1
 58a:	63 9f       	mul	r22, r19
 58c:	aa 27       	eor	r26, r26
 58e:	f0 0d       	add	r31, r0
 590:	b1 1d       	adc	r27, r1
 592:	aa 1f       	adc	r26, r26
 594:	64 9f       	mul	r22, r20
 596:	66 27       	eor	r22, r22
 598:	b0 0d       	add	r27, r0
 59a:	a1 1d       	adc	r26, r1
 59c:	66 1f       	adc	r22, r22
 59e:	82 9f       	mul	r24, r18
 5a0:	22 27       	eor	r18, r18
 5a2:	b0 0d       	add	r27, r0
 5a4:	a1 1d       	adc	r26, r1
 5a6:	62 1f       	adc	r22, r18
 5a8:	73 9f       	mul	r23, r19
 5aa:	b0 0d       	add	r27, r0
 5ac:	a1 1d       	adc	r26, r1
 5ae:	62 1f       	adc	r22, r18
 5b0:	83 9f       	mul	r24, r19
 5b2:	a0 0d       	add	r26, r0
 5b4:	61 1d       	adc	r22, r1
 5b6:	22 1f       	adc	r18, r18
 5b8:	74 9f       	mul	r23, r20
 5ba:	33 27       	eor	r19, r19
 5bc:	a0 0d       	add	r26, r0
 5be:	61 1d       	adc	r22, r1
 5c0:	23 1f       	adc	r18, r19
 5c2:	84 9f       	mul	r24, r20
 5c4:	60 0d       	add	r22, r0
 5c6:	21 1d       	adc	r18, r1
 5c8:	82 2f       	mov	r24, r18
 5ca:	76 2f       	mov	r23, r22
 5cc:	6a 2f       	mov	r22, r26
 5ce:	11 24       	eor	r1, r1
 5d0:	9f 57       	subi	r25, 0x7F	; 127
 5d2:	50 40       	sbci	r21, 0x00	; 0
 5d4:	8a f0       	brmi	.+34     	; 0x5f8 <__mulsf3_pse+0x84>
 5d6:	e1 f0       	breq	.+56     	; 0x610 <__mulsf3_pse+0x9c>
 5d8:	88 23       	and	r24, r24
 5da:	4a f0       	brmi	.+18     	; 0x5ee <__mulsf3_pse+0x7a>
 5dc:	ee 0f       	add	r30, r30
 5de:	ff 1f       	adc	r31, r31
 5e0:	bb 1f       	adc	r27, r27
 5e2:	66 1f       	adc	r22, r22
 5e4:	77 1f       	adc	r23, r23
 5e6:	88 1f       	adc	r24, r24
 5e8:	91 50       	subi	r25, 0x01	; 1
 5ea:	50 40       	sbci	r21, 0x00	; 0
 5ec:	a9 f7       	brne	.-22     	; 0x5d8 <__mulsf3_pse+0x64>
 5ee:	9e 3f       	cpi	r25, 0xFE	; 254
 5f0:	51 05       	cpc	r21, r1
 5f2:	70 f0       	brcs	.+28     	; 0x610 <__mulsf3_pse+0x9c>
 5f4:	60 cf       	rjmp	.-320    	; 0x4b6 <__fp_inf>
 5f6:	aa cf       	rjmp	.-172    	; 0x54c <__fp_szero>
 5f8:	5f 3f       	cpi	r21, 0xFF	; 255
 5fa:	ec f3       	brlt	.-6      	; 0x5f6 <__mulsf3_pse+0x82>
 5fc:	98 3e       	cpi	r25, 0xE8	; 232
 5fe:	dc f3       	brlt	.-10     	; 0x5f6 <__mulsf3_pse+0x82>
 600:	86 95       	lsr	r24
 602:	77 95       	ror	r23
 604:	67 95       	ror	r22
 606:	b7 95       	ror	r27
 608:	f7 95       	ror	r31
 60a:	e7 95       	ror	r30
 60c:	9f 5f       	subi	r25, 0xFF	; 255
 60e:	c1 f7       	brne	.-16     	; 0x600 <__mulsf3_pse+0x8c>
 610:	fe 2b       	or	r31, r30
 612:	88 0f       	add	r24, r24
 614:	91 1d       	adc	r25, r1
 616:	96 95       	lsr	r25
 618:	87 95       	ror	r24
 61a:	97 f9       	bld	r25, 7
 61c:	08 95       	ret

0000061e <_exit>:
 61e:	f8 94       	cli

00000620 <__stop_program>:
 620:	ff cf       	rjmp	.-2      	; 0x620 <__stop_program>
