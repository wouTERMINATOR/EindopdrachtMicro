
eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000057e  00000612  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000057e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800102  00800102  00000614  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a97  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d4  00000000  00000000  0000115b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ac  00000000  00000000  00001a2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001ddc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000497  00000000  00000000  00001e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002c5  00000000  00000000  00002333  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000025f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	6e c0       	rjmp	.+220    	; 0xe6 <__vector_2>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e7       	ldi	r30, 0x7E	; 126
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 30       	cpi	r26, 0x04	; 4
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a3 d0       	rcall	.+326    	; 0x20a <main>
  c4:	5a c2       	rjmp	.+1204   	; 0x57a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <wait>:
	
void PLAYNOTE(float duration, float frequency);

void wait( int ms )
{
	for (int i=0; i<ms; i++) {
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	08 c0       	rjmp	.+16     	; 0xde <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ce:	ef ec       	ldi	r30, 0xCF	; 207
  d0:	f7 e0       	ldi	r31, 0x07	; 7
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <wait+0xa>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <wait+0x10>
  d8:	00 00       	nop
  da:	2f 5f       	subi	r18, 0xFF	; 255
  dc:	3f 4f       	sbci	r19, 0xFF	; 255
  de:	28 17       	cp	r18, r24
  e0:	39 07       	cpc	r19, r25
  e2:	ac f3       	brlt	.-22     	; 0xce <wait+0x6>
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
  e4:	08 95       	ret

000000e6 <__vector_2>:

//This interrupt gets triggered when the ultrasonic sensor(echo) receives a signal.
ISR( INT1_vect ) {
  e6:	1f 92       	push	r1
  e8:	0f 92       	push	r0
  ea:	0f b6       	in	r0, 0x3f	; 63
  ec:	0f 92       	push	r0
  ee:	11 24       	eor	r1, r1
  f0:	8f 93       	push	r24
	signalRecieved = 1;
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
}
  f8:	8f 91       	pop	r24
  fa:	0f 90       	pop	r0
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	0f 90       	pop	r0
 100:	1f 90       	pop	r1
 102:	18 95       	reti

00000104 <checkUltrasonic>:

//This method sends a signal from the ultrasonic sensor
void checkUltrasonic(){
	signalRecieved = 0;
 104:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
	counter_in_ms = 0;
 108:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 10c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
	PORTD = 0b00000100;			// Starts sending a signal
 110:	84 e0       	ldi	r24, 0x04	; 4
 112:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 114:	8a e1       	ldi	r24, 0x1A	; 26
 116:	8a 95       	dec	r24
 118:	f1 f7       	brne	.-4      	; 0x116 <checkUltrasonic+0x12>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <checkUltrasonic+0x18>
	_delay_us(10);				// Waits for 10 ms
	PORTD = 0b00000000;			// Stops sending a signal
 11c:	12 ba       	out	0x12, r1	; 18
	while(1){
		counter_in_ms = counter_in_ms + 1;
 11e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 122:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__data_end+0x1>
 126:	01 96       	adiw	r24, 0x01	; 1
 128:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_end+0x1>
 12c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
		if(signalRecieved == 1){
 130:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 134:	81 30       	cpi	r24, 0x01	; 1
 136:	99 f7       	brne	.-26     	; 0x11e <checkUltrasonic+0x1a>
			break;
		}
	}
}
 138:	08 95       	ret

0000013a <PLAYNOTE>:
    }
	return 1;
}

//This method controls the sound emitted by the piëzo-element, using a specified frequency and duration.
void PLAYNOTE(float duration, float frequency){
 13a:	4f 92       	push	r4
 13c:	5f 92       	push	r5
 13e:	6f 92       	push	r6
 140:	7f 92       	push	r7
 142:	8f 92       	push	r8
 144:	9f 92       	push	r9
 146:	af 92       	push	r10
 148:	bf 92       	push	r11
 14a:	cf 92       	push	r12
 14c:	df 92       	push	r13
 14e:	ef 92       	push	r14
 150:	ff 92       	push	r15
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	00 d0       	rcall	.+0      	; 0x158 <PLAYNOTE+0x1e>
 158:	00 d0       	rcall	.+0      	; 0x15a <PLAYNOTE+0x20>
 15a:	cd b7       	in	r28, 0x3d	; 61
 15c:	de b7       	in	r29, 0x3e	; 62
 15e:	4b 01       	movw	r8, r22
 160:	5c 01       	movw	r10, r24
	long int i, cycles;
	float half_period;
	float wavelength;
	
	wavelength=(1/frequency)*1000;
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	80 e8       	ldi	r24, 0x80	; 128
 168:	9f e3       	ldi	r25, 0x3F	; 63
 16a:	7d d0       	rcall	.+250    	; 0x266 <__divsf3>
 16c:	20 e0       	ldi	r18, 0x00	; 0
 16e:	30 e0       	ldi	r19, 0x00	; 0
 170:	4a e7       	ldi	r20, 0x7A	; 122
 172:	54 e4       	ldi	r21, 0x44	; 68
 174:	9f d1       	rcall	.+830    	; 0x4b4 <__mulsf3>
 176:	6b 01       	movw	r12, r22
 178:	7c 01       	movw	r14, r24
	
	cycles = duration/wavelength;
 17a:	9b 01       	movw	r18, r22
 17c:	ac 01       	movw	r20, r24
 17e:	c5 01       	movw	r24, r10
 180:	b4 01       	movw	r22, r8
 182:	71 d0       	rcall	.+226    	; 0x266 <__divsf3>
 184:	d8 d0       	rcall	.+432    	; 0x336 <__fixsfsi>
 186:	2b 01       	movw	r4, r22
 188:	3c 01       	movw	r6, r24
	
	half_period = wavelength/2;
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	5f e3       	ldi	r21, 0x3F	; 63
 192:	c7 01       	movw	r24, r14
 194:	b6 01       	movw	r22, r12
 196:	8e d1       	rcall	.+796    	; 0x4b4 <__mulsf3>
 198:	69 83       	std	Y+1, r22	; 0x01
 19a:	7a 83       	std	Y+2, r23	; 0x02
 19c:	8b 83       	std	Y+3, r24	; 0x03
 19e:	9c 83       	std	Y+4, r25	; 0x04
	
	SPEAKER_DDR |= (1 << SPEAKER_PIN);
 1a0:	84 b3       	in	r24, 0x14	; 20
 1a2:	80 68       	ori	r24, 0x80	; 128
 1a4:	84 bb       	out	0x14, r24	; 20
	
	for(i=0;i<cycles;i++){
 1a6:	c1 2c       	mov	r12, r1
 1a8:	d1 2c       	mov	r13, r1
 1aa:	76 01       	movw	r14, r12
		wait(half_period);
 1ac:	16 c0       	rjmp	.+44     	; 0x1da <PLAYNOTE+0xa0>
 1ae:	69 81       	ldd	r22, Y+1	; 0x01
 1b0:	7a 81       	ldd	r23, Y+2	; 0x02
 1b2:	8b 81       	ldd	r24, Y+3	; 0x03
 1b4:	9c 81       	ldd	r25, Y+4	; 0x04
 1b6:	bf d0       	rcall	.+382    	; 0x336 <__fixsfsi>
 1b8:	4b 01       	movw	r8, r22
 1ba:	5c 01       	movw	r10, r24
 1bc:	cb 01       	movw	r24, r22
		
		SPEAKER_PORT |= (1<<SPEAKER_PIN);
 1be:	84 df       	rcall	.-248    	; 0xc8 <wait>
 1c0:	85 b3       	in	r24, 0x15	; 21
 1c2:	80 68       	ori	r24, 0x80	; 128
		
		wait(half_period);
 1c4:	85 bb       	out	0x15, r24	; 21
 1c6:	c4 01       	movw	r24, r8
 1c8:	7f df       	rcall	.-258    	; 0xc8 <wait>
		
		SPEAKER_PORT &= ~(1<<SPEAKER_PIN);
 1ca:	85 b3       	in	r24, 0x15	; 21
 1cc:	8f 77       	andi	r24, 0x7F	; 127
 1ce:	85 bb       	out	0x15, r24	; 21
	
	half_period = wavelength/2;
	
	SPEAKER_DDR |= (1 << SPEAKER_PIN);
	
	for(i=0;i<cycles;i++){
 1d0:	8f ef       	ldi	r24, 0xFF	; 255
 1d2:	c8 1a       	sub	r12, r24
 1d4:	d8 0a       	sbc	r13, r24
 1d6:	e8 0a       	sbc	r14, r24
 1d8:	f8 0a       	sbc	r15, r24
 1da:	c4 14       	cp	r12, r4
 1dc:	d5 04       	cpc	r13, r5
 1de:	e6 04       	cpc	r14, r6
 1e0:	f7 04       	cpc	r15, r7
 1e2:	2c f3       	brlt	.-54     	; 0x1ae <PLAYNOTE+0x74>
		wait(half_period);
		
		SPEAKER_PORT &= ~(1<<SPEAKER_PIN);
	}
	return;
}
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	ff 90       	pop	r15
 1f2:	ef 90       	pop	r14
 1f4:	df 90       	pop	r13
 1f6:	cf 90       	pop	r12
 1f8:	bf 90       	pop	r11
 1fa:	af 90       	pop	r10
 1fc:	9f 90       	pop	r9
 1fe:	8f 90       	pop	r8
 200:	7f 90       	pop	r7
 202:	6f 90       	pop	r6
 204:	5f 90       	pop	r5
 206:	4f 90       	pop	r4
 208:	08 95       	ret

0000020a <main>:
	}
}

int main(void)
{
	DDRD = 0b01100100; // used for sensor pin 2 is for trigger pin 1 is for echo
 20a:	84 e6       	ldi	r24, 0x64	; 100
 20c:	81 bb       	out	0x11, r24	; 17
	
	// Init Interrupt hardware
	EICRA |= 0x0B;			// INT1 falling edge, INT0 rising edge 
 20e:	ea e6       	ldi	r30, 0x6A	; 106
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	8b 60       	ori	r24, 0x0B	; 11
 216:	80 83       	st	Z, r24
	EIMSK |= 0x02;			// Enable INT1 & INT0
 218:	89 b7       	in	r24, 0x39	; 57
 21a:	82 60       	ori	r24, 0x02	; 2
 21c:	89 bf       	out	0x39, r24	; 57
	
	sei();					
 21e:	78 94       	sei
	
	PLAYNOTE(1000, 250);		//Starting tone to show the program has started
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	4a e7       	ldi	r20, 0x7A	; 122
 226:	53 e4       	ldi	r21, 0x43	; 67
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	70 e0       	ldi	r23, 0x00	; 0
 22c:	8a e7       	ldi	r24, 0x7A	; 122
 22e:	94 e4       	ldi	r25, 0x44	; 68
 230:	84 df       	rcall	.-248    	; 0x13a <PLAYNOTE>
	while(1){
		checkUltrasonic();
 232:	68 df       	rcall	.-304    	; 0x104 <checkUltrasonic>
 234:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__data_end>
	    PLAYNOTE(500,counter_in_ms/4);	
 238:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__data_end+0x1>
 23c:	77 23       	and	r23, r23
 23e:	14 f4       	brge	.+4      	; 0x244 <main+0x3a>
 240:	6d 5f       	subi	r22, 0xFD	; 253
 242:	7f 4f       	sbci	r23, 0xFF	; 255
 244:	75 95       	asr	r23
 246:	67 95       	ror	r22
 248:	75 95       	asr	r23
 24a:	67 95       	ror	r22
 24c:	07 2e       	mov	r0, r23
 24e:	00 0c       	add	r0, r0
 250:	88 0b       	sbc	r24, r24
 252:	99 0b       	sbc	r25, r25
 254:	a3 d0       	rcall	.+326    	; 0x39c <__floatsisf>
 256:	9b 01       	movw	r18, r22
 258:	ac 01       	movw	r20, r24
 25a:	60 e0       	ldi	r22, 0x00	; 0
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	8a ef       	ldi	r24, 0xFA	; 250
 260:	93 e4       	ldi	r25, 0x43	; 67
 262:	6b df       	rcall	.-298    	; 0x13a <PLAYNOTE>
 264:	e6 cf       	rjmp	.-52     	; 0x232 <main+0x28>

00000266 <__divsf3>:
 266:	0c d0       	rcall	.+24     	; 0x280 <__divsf3x>
 268:	eb c0       	rjmp	.+470    	; 0x440 <__fp_round>
 26a:	e3 d0       	rcall	.+454    	; 0x432 <__fp_pscB>
 26c:	40 f0       	brcs	.+16     	; 0x27e <__divsf3+0x18>
 26e:	da d0       	rcall	.+436    	; 0x424 <__fp_pscA>
 270:	30 f0       	brcs	.+12     	; 0x27e <__divsf3+0x18>
 272:	21 f4       	brne	.+8      	; 0x27c <__divsf3+0x16>
 274:	5f 3f       	cpi	r21, 0xFF	; 255
 276:	19 f0       	breq	.+6      	; 0x27e <__divsf3+0x18>
 278:	cc c0       	rjmp	.+408    	; 0x412 <__fp_inf>
 27a:	51 11       	cpse	r21, r1
 27c:	15 c1       	rjmp	.+554    	; 0x4a8 <__fp_szero>
 27e:	cf c0       	rjmp	.+414    	; 0x41e <__fp_nan>

00000280 <__divsf3x>:
 280:	f0 d0       	rcall	.+480    	; 0x462 <__fp_split3>
 282:	98 f3       	brcs	.-26     	; 0x26a <__divsf3+0x4>

00000284 <__divsf3_pse>:
 284:	99 23       	and	r25, r25
 286:	c9 f3       	breq	.-14     	; 0x27a <__divsf3+0x14>
 288:	55 23       	and	r21, r21
 28a:	b1 f3       	breq	.-20     	; 0x278 <__divsf3+0x12>
 28c:	95 1b       	sub	r25, r21
 28e:	55 0b       	sbc	r21, r21
 290:	bb 27       	eor	r27, r27
 292:	aa 27       	eor	r26, r26
 294:	62 17       	cp	r22, r18
 296:	73 07       	cpc	r23, r19
 298:	84 07       	cpc	r24, r20
 29a:	38 f0       	brcs	.+14     	; 0x2aa <__divsf3_pse+0x26>
 29c:	9f 5f       	subi	r25, 0xFF	; 255
 29e:	5f 4f       	sbci	r21, 0xFF	; 255
 2a0:	22 0f       	add	r18, r18
 2a2:	33 1f       	adc	r19, r19
 2a4:	44 1f       	adc	r20, r20
 2a6:	aa 1f       	adc	r26, r26
 2a8:	a9 f3       	breq	.-22     	; 0x294 <__divsf3_pse+0x10>
 2aa:	33 d0       	rcall	.+102    	; 0x312 <__divsf3_pse+0x8e>
 2ac:	0e 2e       	mov	r0, r30
 2ae:	3a f0       	brmi	.+14     	; 0x2be <__divsf3_pse+0x3a>
 2b0:	e0 e8       	ldi	r30, 0x80	; 128
 2b2:	30 d0       	rcall	.+96     	; 0x314 <__divsf3_pse+0x90>
 2b4:	91 50       	subi	r25, 0x01	; 1
 2b6:	50 40       	sbci	r21, 0x00	; 0
 2b8:	e6 95       	lsr	r30
 2ba:	00 1c       	adc	r0, r0
 2bc:	ca f7       	brpl	.-14     	; 0x2b0 <__divsf3_pse+0x2c>
 2be:	29 d0       	rcall	.+82     	; 0x312 <__divsf3_pse+0x8e>
 2c0:	fe 2f       	mov	r31, r30
 2c2:	27 d0       	rcall	.+78     	; 0x312 <__divsf3_pse+0x8e>
 2c4:	66 0f       	add	r22, r22
 2c6:	77 1f       	adc	r23, r23
 2c8:	88 1f       	adc	r24, r24
 2ca:	bb 1f       	adc	r27, r27
 2cc:	26 17       	cp	r18, r22
 2ce:	37 07       	cpc	r19, r23
 2d0:	48 07       	cpc	r20, r24
 2d2:	ab 07       	cpc	r26, r27
 2d4:	b0 e8       	ldi	r27, 0x80	; 128
 2d6:	09 f0       	breq	.+2      	; 0x2da <__divsf3_pse+0x56>
 2d8:	bb 0b       	sbc	r27, r27
 2da:	80 2d       	mov	r24, r0
 2dc:	bf 01       	movw	r22, r30
 2de:	ff 27       	eor	r31, r31
 2e0:	93 58       	subi	r25, 0x83	; 131
 2e2:	5f 4f       	sbci	r21, 0xFF	; 255
 2e4:	2a f0       	brmi	.+10     	; 0x2f0 <__divsf3_pse+0x6c>
 2e6:	9e 3f       	cpi	r25, 0xFE	; 254
 2e8:	51 05       	cpc	r21, r1
 2ea:	68 f0       	brcs	.+26     	; 0x306 <__divsf3_pse+0x82>
 2ec:	92 c0       	rjmp	.+292    	; 0x412 <__fp_inf>
 2ee:	dc c0       	rjmp	.+440    	; 0x4a8 <__fp_szero>
 2f0:	5f 3f       	cpi	r21, 0xFF	; 255
 2f2:	ec f3       	brlt	.-6      	; 0x2ee <__divsf3_pse+0x6a>
 2f4:	98 3e       	cpi	r25, 0xE8	; 232
 2f6:	dc f3       	brlt	.-10     	; 0x2ee <__divsf3_pse+0x6a>
 2f8:	86 95       	lsr	r24
 2fa:	77 95       	ror	r23
 2fc:	67 95       	ror	r22
 2fe:	b7 95       	ror	r27
 300:	f7 95       	ror	r31
 302:	9f 5f       	subi	r25, 0xFF	; 255
 304:	c9 f7       	brne	.-14     	; 0x2f8 <__divsf3_pse+0x74>
 306:	88 0f       	add	r24, r24
 308:	91 1d       	adc	r25, r1
 30a:	96 95       	lsr	r25
 30c:	87 95       	ror	r24
 30e:	97 f9       	bld	r25, 7
 310:	08 95       	ret
 312:	e1 e0       	ldi	r30, 0x01	; 1
 314:	66 0f       	add	r22, r22
 316:	77 1f       	adc	r23, r23
 318:	88 1f       	adc	r24, r24
 31a:	bb 1f       	adc	r27, r27
 31c:	62 17       	cp	r22, r18
 31e:	73 07       	cpc	r23, r19
 320:	84 07       	cpc	r24, r20
 322:	ba 07       	cpc	r27, r26
 324:	20 f0       	brcs	.+8      	; 0x32e <__divsf3_pse+0xaa>
 326:	62 1b       	sub	r22, r18
 328:	73 0b       	sbc	r23, r19
 32a:	84 0b       	sbc	r24, r20
 32c:	ba 0b       	sbc	r27, r26
 32e:	ee 1f       	adc	r30, r30
 330:	88 f7       	brcc	.-30     	; 0x314 <__divsf3_pse+0x90>
 332:	e0 95       	com	r30
 334:	08 95       	ret

00000336 <__fixsfsi>:
 336:	04 d0       	rcall	.+8      	; 0x340 <__fixunssfsi>
 338:	68 94       	set
 33a:	b1 11       	cpse	r27, r1
 33c:	b5 c0       	rjmp	.+362    	; 0x4a8 <__fp_szero>
 33e:	08 95       	ret

00000340 <__fixunssfsi>:
 340:	98 d0       	rcall	.+304    	; 0x472 <__fp_splitA>
 342:	88 f0       	brcs	.+34     	; 0x366 <__fixunssfsi+0x26>
 344:	9f 57       	subi	r25, 0x7F	; 127
 346:	90 f0       	brcs	.+36     	; 0x36c <__fixunssfsi+0x2c>
 348:	b9 2f       	mov	r27, r25
 34a:	99 27       	eor	r25, r25
 34c:	b7 51       	subi	r27, 0x17	; 23
 34e:	a0 f0       	brcs	.+40     	; 0x378 <__fixunssfsi+0x38>
 350:	d1 f0       	breq	.+52     	; 0x386 <__fixunssfsi+0x46>
 352:	66 0f       	add	r22, r22
 354:	77 1f       	adc	r23, r23
 356:	88 1f       	adc	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	1a f0       	brmi	.+6      	; 0x362 <__fixunssfsi+0x22>
 35c:	ba 95       	dec	r27
 35e:	c9 f7       	brne	.-14     	; 0x352 <__fixunssfsi+0x12>
 360:	12 c0       	rjmp	.+36     	; 0x386 <__fixunssfsi+0x46>
 362:	b1 30       	cpi	r27, 0x01	; 1
 364:	81 f0       	breq	.+32     	; 0x386 <__fixunssfsi+0x46>
 366:	9f d0       	rcall	.+318    	; 0x4a6 <__fp_zero>
 368:	b1 e0       	ldi	r27, 0x01	; 1
 36a:	08 95       	ret
 36c:	9c c0       	rjmp	.+312    	; 0x4a6 <__fp_zero>
 36e:	67 2f       	mov	r22, r23
 370:	78 2f       	mov	r23, r24
 372:	88 27       	eor	r24, r24
 374:	b8 5f       	subi	r27, 0xF8	; 248
 376:	39 f0       	breq	.+14     	; 0x386 <__fixunssfsi+0x46>
 378:	b9 3f       	cpi	r27, 0xF9	; 249
 37a:	cc f3       	brlt	.-14     	; 0x36e <__fixunssfsi+0x2e>
 37c:	86 95       	lsr	r24
 37e:	77 95       	ror	r23
 380:	67 95       	ror	r22
 382:	b3 95       	inc	r27
 384:	d9 f7       	brne	.-10     	; 0x37c <__fixunssfsi+0x3c>
 386:	3e f4       	brtc	.+14     	; 0x396 <__fixunssfsi+0x56>
 388:	90 95       	com	r25
 38a:	80 95       	com	r24
 38c:	70 95       	com	r23
 38e:	61 95       	neg	r22
 390:	7f 4f       	sbci	r23, 0xFF	; 255
 392:	8f 4f       	sbci	r24, 0xFF	; 255
 394:	9f 4f       	sbci	r25, 0xFF	; 255
 396:	08 95       	ret

00000398 <__floatunsisf>:
 398:	e8 94       	clt
 39a:	09 c0       	rjmp	.+18     	; 0x3ae <__floatsisf+0x12>

0000039c <__floatsisf>:
 39c:	97 fb       	bst	r25, 7
 39e:	3e f4       	brtc	.+14     	; 0x3ae <__floatsisf+0x12>
 3a0:	90 95       	com	r25
 3a2:	80 95       	com	r24
 3a4:	70 95       	com	r23
 3a6:	61 95       	neg	r22
 3a8:	7f 4f       	sbci	r23, 0xFF	; 255
 3aa:	8f 4f       	sbci	r24, 0xFF	; 255
 3ac:	9f 4f       	sbci	r25, 0xFF	; 255
 3ae:	99 23       	and	r25, r25
 3b0:	a9 f0       	breq	.+42     	; 0x3dc <__floatsisf+0x40>
 3b2:	f9 2f       	mov	r31, r25
 3b4:	96 e9       	ldi	r25, 0x96	; 150
 3b6:	bb 27       	eor	r27, r27
 3b8:	93 95       	inc	r25
 3ba:	f6 95       	lsr	r31
 3bc:	87 95       	ror	r24
 3be:	77 95       	ror	r23
 3c0:	67 95       	ror	r22
 3c2:	b7 95       	ror	r27
 3c4:	f1 11       	cpse	r31, r1
 3c6:	f8 cf       	rjmp	.-16     	; 0x3b8 <__floatsisf+0x1c>
 3c8:	fa f4       	brpl	.+62     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ca:	bb 0f       	add	r27, r27
 3cc:	11 f4       	brne	.+4      	; 0x3d2 <__floatsisf+0x36>
 3ce:	60 ff       	sbrs	r22, 0
 3d0:	1b c0       	rjmp	.+54     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3d2:	6f 5f       	subi	r22, 0xFF	; 255
 3d4:	7f 4f       	sbci	r23, 0xFF	; 255
 3d6:	8f 4f       	sbci	r24, 0xFF	; 255
 3d8:	9f 4f       	sbci	r25, 0xFF	; 255
 3da:	16 c0       	rjmp	.+44     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3dc:	88 23       	and	r24, r24
 3de:	11 f0       	breq	.+4      	; 0x3e4 <__floatsisf+0x48>
 3e0:	96 e9       	ldi	r25, 0x96	; 150
 3e2:	11 c0       	rjmp	.+34     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e4:	77 23       	and	r23, r23
 3e6:	21 f0       	breq	.+8      	; 0x3f0 <__floatsisf+0x54>
 3e8:	9e e8       	ldi	r25, 0x8E	; 142
 3ea:	87 2f       	mov	r24, r23
 3ec:	76 2f       	mov	r23, r22
 3ee:	05 c0       	rjmp	.+10     	; 0x3fa <__floatsisf+0x5e>
 3f0:	66 23       	and	r22, r22
 3f2:	71 f0       	breq	.+28     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f4:	96 e8       	ldi	r25, 0x86	; 134
 3f6:	86 2f       	mov	r24, r22
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	60 e0       	ldi	r22, 0x00	; 0
 3fc:	2a f0       	brmi	.+10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fe:	9a 95       	dec	r25
 400:	66 0f       	add	r22, r22
 402:	77 1f       	adc	r23, r23
 404:	88 1f       	adc	r24, r24
 406:	da f7       	brpl	.-10     	; 0x3fe <__floatsisf+0x62>
 408:	88 0f       	add	r24, r24
 40a:	96 95       	lsr	r25
 40c:	87 95       	ror	r24
 40e:	97 f9       	bld	r25, 7
 410:	08 95       	ret

00000412 <__fp_inf>:
 412:	97 f9       	bld	r25, 7
 414:	9f 67       	ori	r25, 0x7F	; 127
 416:	80 e8       	ldi	r24, 0x80	; 128
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	60 e0       	ldi	r22, 0x00	; 0
 41c:	08 95       	ret

0000041e <__fp_nan>:
 41e:	9f ef       	ldi	r25, 0xFF	; 255
 420:	80 ec       	ldi	r24, 0xC0	; 192
 422:	08 95       	ret

00000424 <__fp_pscA>:
 424:	00 24       	eor	r0, r0
 426:	0a 94       	dec	r0
 428:	16 16       	cp	r1, r22
 42a:	17 06       	cpc	r1, r23
 42c:	18 06       	cpc	r1, r24
 42e:	09 06       	cpc	r0, r25
 430:	08 95       	ret

00000432 <__fp_pscB>:
 432:	00 24       	eor	r0, r0
 434:	0a 94       	dec	r0
 436:	12 16       	cp	r1, r18
 438:	13 06       	cpc	r1, r19
 43a:	14 06       	cpc	r1, r20
 43c:	05 06       	cpc	r0, r21
 43e:	08 95       	ret

00000440 <__fp_round>:
 440:	09 2e       	mov	r0, r25
 442:	03 94       	inc	r0
 444:	00 0c       	add	r0, r0
 446:	11 f4       	brne	.+4      	; 0x44c <__fp_round+0xc>
 448:	88 23       	and	r24, r24
 44a:	52 f0       	brmi	.+20     	; 0x460 <__fp_round+0x20>
 44c:	bb 0f       	add	r27, r27
 44e:	40 f4       	brcc	.+16     	; 0x460 <__fp_round+0x20>
 450:	bf 2b       	or	r27, r31
 452:	11 f4       	brne	.+4      	; 0x458 <__fp_round+0x18>
 454:	60 ff       	sbrs	r22, 0
 456:	04 c0       	rjmp	.+8      	; 0x460 <__fp_round+0x20>
 458:	6f 5f       	subi	r22, 0xFF	; 255
 45a:	7f 4f       	sbci	r23, 0xFF	; 255
 45c:	8f 4f       	sbci	r24, 0xFF	; 255
 45e:	9f 4f       	sbci	r25, 0xFF	; 255
 460:	08 95       	ret

00000462 <__fp_split3>:
 462:	57 fd       	sbrc	r21, 7
 464:	90 58       	subi	r25, 0x80	; 128
 466:	44 0f       	add	r20, r20
 468:	55 1f       	adc	r21, r21
 46a:	59 f0       	breq	.+22     	; 0x482 <__fp_splitA+0x10>
 46c:	5f 3f       	cpi	r21, 0xFF	; 255
 46e:	71 f0       	breq	.+28     	; 0x48c <__fp_splitA+0x1a>
 470:	47 95       	ror	r20

00000472 <__fp_splitA>:
 472:	88 0f       	add	r24, r24
 474:	97 fb       	bst	r25, 7
 476:	99 1f       	adc	r25, r25
 478:	61 f0       	breq	.+24     	; 0x492 <__fp_splitA+0x20>
 47a:	9f 3f       	cpi	r25, 0xFF	; 255
 47c:	79 f0       	breq	.+30     	; 0x49c <__fp_splitA+0x2a>
 47e:	87 95       	ror	r24
 480:	08 95       	ret
 482:	12 16       	cp	r1, r18
 484:	13 06       	cpc	r1, r19
 486:	14 06       	cpc	r1, r20
 488:	55 1f       	adc	r21, r21
 48a:	f2 cf       	rjmp	.-28     	; 0x470 <__fp_split3+0xe>
 48c:	46 95       	lsr	r20
 48e:	f1 df       	rcall	.-30     	; 0x472 <__fp_splitA>
 490:	08 c0       	rjmp	.+16     	; 0x4a2 <__fp_splitA+0x30>
 492:	16 16       	cp	r1, r22
 494:	17 06       	cpc	r1, r23
 496:	18 06       	cpc	r1, r24
 498:	99 1f       	adc	r25, r25
 49a:	f1 cf       	rjmp	.-30     	; 0x47e <__fp_splitA+0xc>
 49c:	86 95       	lsr	r24
 49e:	71 05       	cpc	r23, r1
 4a0:	61 05       	cpc	r22, r1
 4a2:	08 94       	sec
 4a4:	08 95       	ret

000004a6 <__fp_zero>:
 4a6:	e8 94       	clt

000004a8 <__fp_szero>:
 4a8:	bb 27       	eor	r27, r27
 4aa:	66 27       	eor	r22, r22
 4ac:	77 27       	eor	r23, r23
 4ae:	cb 01       	movw	r24, r22
 4b0:	97 f9       	bld	r25, 7
 4b2:	08 95       	ret

000004b4 <__mulsf3>:
 4b4:	0b d0       	rcall	.+22     	; 0x4cc <__mulsf3x>
 4b6:	c4 cf       	rjmp	.-120    	; 0x440 <__fp_round>
 4b8:	b5 df       	rcall	.-150    	; 0x424 <__fp_pscA>
 4ba:	28 f0       	brcs	.+10     	; 0x4c6 <__mulsf3+0x12>
 4bc:	ba df       	rcall	.-140    	; 0x432 <__fp_pscB>
 4be:	18 f0       	brcs	.+6      	; 0x4c6 <__mulsf3+0x12>
 4c0:	95 23       	and	r25, r21
 4c2:	09 f0       	breq	.+2      	; 0x4c6 <__mulsf3+0x12>
 4c4:	a6 cf       	rjmp	.-180    	; 0x412 <__fp_inf>
 4c6:	ab cf       	rjmp	.-170    	; 0x41e <__fp_nan>
 4c8:	11 24       	eor	r1, r1
 4ca:	ee cf       	rjmp	.-36     	; 0x4a8 <__fp_szero>

000004cc <__mulsf3x>:
 4cc:	ca df       	rcall	.-108    	; 0x462 <__fp_split3>
 4ce:	a0 f3       	brcs	.-24     	; 0x4b8 <__mulsf3+0x4>

000004d0 <__mulsf3_pse>:
 4d0:	95 9f       	mul	r25, r21
 4d2:	d1 f3       	breq	.-12     	; 0x4c8 <__mulsf3+0x14>
 4d4:	95 0f       	add	r25, r21
 4d6:	50 e0       	ldi	r21, 0x00	; 0
 4d8:	55 1f       	adc	r21, r21
 4da:	62 9f       	mul	r22, r18
 4dc:	f0 01       	movw	r30, r0
 4de:	72 9f       	mul	r23, r18
 4e0:	bb 27       	eor	r27, r27
 4e2:	f0 0d       	add	r31, r0
 4e4:	b1 1d       	adc	r27, r1
 4e6:	63 9f       	mul	r22, r19
 4e8:	aa 27       	eor	r26, r26
 4ea:	f0 0d       	add	r31, r0
 4ec:	b1 1d       	adc	r27, r1
 4ee:	aa 1f       	adc	r26, r26
 4f0:	64 9f       	mul	r22, r20
 4f2:	66 27       	eor	r22, r22
 4f4:	b0 0d       	add	r27, r0
 4f6:	a1 1d       	adc	r26, r1
 4f8:	66 1f       	adc	r22, r22
 4fa:	82 9f       	mul	r24, r18
 4fc:	22 27       	eor	r18, r18
 4fe:	b0 0d       	add	r27, r0
 500:	a1 1d       	adc	r26, r1
 502:	62 1f       	adc	r22, r18
 504:	73 9f       	mul	r23, r19
 506:	b0 0d       	add	r27, r0
 508:	a1 1d       	adc	r26, r1
 50a:	62 1f       	adc	r22, r18
 50c:	83 9f       	mul	r24, r19
 50e:	a0 0d       	add	r26, r0
 510:	61 1d       	adc	r22, r1
 512:	22 1f       	adc	r18, r18
 514:	74 9f       	mul	r23, r20
 516:	33 27       	eor	r19, r19
 518:	a0 0d       	add	r26, r0
 51a:	61 1d       	adc	r22, r1
 51c:	23 1f       	adc	r18, r19
 51e:	84 9f       	mul	r24, r20
 520:	60 0d       	add	r22, r0
 522:	21 1d       	adc	r18, r1
 524:	82 2f       	mov	r24, r18
 526:	76 2f       	mov	r23, r22
 528:	6a 2f       	mov	r22, r26
 52a:	11 24       	eor	r1, r1
 52c:	9f 57       	subi	r25, 0x7F	; 127
 52e:	50 40       	sbci	r21, 0x00	; 0
 530:	8a f0       	brmi	.+34     	; 0x554 <__mulsf3_pse+0x84>
 532:	e1 f0       	breq	.+56     	; 0x56c <__mulsf3_pse+0x9c>
 534:	88 23       	and	r24, r24
 536:	4a f0       	brmi	.+18     	; 0x54a <__mulsf3_pse+0x7a>
 538:	ee 0f       	add	r30, r30
 53a:	ff 1f       	adc	r31, r31
 53c:	bb 1f       	adc	r27, r27
 53e:	66 1f       	adc	r22, r22
 540:	77 1f       	adc	r23, r23
 542:	88 1f       	adc	r24, r24
 544:	91 50       	subi	r25, 0x01	; 1
 546:	50 40       	sbci	r21, 0x00	; 0
 548:	a9 f7       	brne	.-22     	; 0x534 <__mulsf3_pse+0x64>
 54a:	9e 3f       	cpi	r25, 0xFE	; 254
 54c:	51 05       	cpc	r21, r1
 54e:	70 f0       	brcs	.+28     	; 0x56c <__mulsf3_pse+0x9c>
 550:	60 cf       	rjmp	.-320    	; 0x412 <__fp_inf>
 552:	aa cf       	rjmp	.-172    	; 0x4a8 <__fp_szero>
 554:	5f 3f       	cpi	r21, 0xFF	; 255
 556:	ec f3       	brlt	.-6      	; 0x552 <__mulsf3_pse+0x82>
 558:	98 3e       	cpi	r25, 0xE8	; 232
 55a:	dc f3       	brlt	.-10     	; 0x552 <__mulsf3_pse+0x82>
 55c:	86 95       	lsr	r24
 55e:	77 95       	ror	r23
 560:	67 95       	ror	r22
 562:	b7 95       	ror	r27
 564:	f7 95       	ror	r31
 566:	e7 95       	ror	r30
 568:	9f 5f       	subi	r25, 0xFF	; 255
 56a:	c1 f7       	brne	.-16     	; 0x55c <__mulsf3_pse+0x8c>
 56c:	fe 2b       	or	r31, r30
 56e:	88 0f       	add	r24, r24
 570:	91 1d       	adc	r25, r1
 572:	96 95       	lsr	r25
 574:	87 95       	ror	r24
 576:	97 f9       	bld	r25, 7
 578:	08 95       	ret

0000057a <_exit>:
 57a:	f8 94       	cli

0000057c <__stop_program>:
 57c:	ff cf       	rjmp	.-2      	; 0x57c <__stop_program>
